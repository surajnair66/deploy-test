{"version":3,"sources":["logo.svg","features/counter/counterSlice.js","components/componentOne.js","components/componentTwo.js","components/home.js","routes/routes.js","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["counterSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByValue","action","payload","actions","ComponentOne","ComponentTwo","Home","useSelector","counter","dispatch","useDispatch","className","src","logo","alt","href","target","rel","onClick","RoutesComponent","element","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","counterReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"oMAAe,G,MAAA,IAA0B,kC,sBCE5BA,EAAeC,YAAY,CACtCC,KAAM,UACNC,aAAc,CAAEC,MAAO,GACvBC,SAAU,CACRC,UAAW,SAACC,GACVA,EAAMH,OAAS,GAEjBI,UAAW,SAACD,GACVA,EAAMH,OAAS,GAEjBK,iBAAkB,SAACF,EAAOG,GACxBH,EAAMH,OAASM,EAAOC,YAIrB,EAAmDX,EAAaY,QAA7CJ,GAAnB,EAAQF,UAAR,EAAmBE,WAAWC,EAA9B,EAA8BA,iBAEtBT,IAAf,Q,cCbea,EAJM,WACnB,OAAO,iDCIMC,EAJM,WACnB,OAAO,iDCkCMC,EA5BF,WACGC,aAAY,SAACT,GAAD,OAAWA,KAArC,IACMH,EAAQY,aAAY,SAACT,GAAD,OAAWA,EAAMU,QAAQb,SAC7Cc,EAAWC,cAEjB,OACE,yBAAQC,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,yBAQA,gCACE,wBAAQC,QAAS,kBAAMT,EAAST,EAAiB,KAAjD,eACCL,EACD,wBAAQuB,QAAS,kBAAMT,EAASV,MAAhC,sBChBOoB,EAVS,WACtB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,QAAS,cAAC,EAAD,IAAUC,KAAK,MAC/B,cAAC,IAAD,CAAOD,QAAS,cAAC,EAAD,IAAkBC,KAAK,kBACvC,cAAC,IAAD,CAAOD,QAAS,cAAC,EAAD,IAAkBC,KAAK,sBCQ9BC,MATf,WAEE,OACE,qBAAKX,UAAU,MAAf,SACE,cAAC,EAAD,OCFSY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJCQ,cAAe,CAC5BC,QAAS,CACPzB,QAAS0B,K,OCIbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,UAINC,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.bacbd58c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const counterSlice = createSlice({\n  name: \"counter\",\n  initialState: { value: 0 },\n  reducers: {\n    increment: (state) => {\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    incrementByValue: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n});\nexport const { increment, decrement, incrementByValue } = counterSlice.actions;\n\nexport default counterSlice.reducer;\n","import { React } from \"react\";\n\nconst ComponentOne = () => {\n  return <div>Component One</div>;\n};\n\nexport default ComponentOne;\n","import { React } from \"react\";\nimport { R } from \"react-router-dom\";\n\nconst ComponentTwo = () => {\n  return <div>Component Two</div>;\n};\n\nexport default ComponentTwo;\n","import React from \"react\";\nimport logo from \"../logo.svg\";\nimport \"../App.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  increment,\n  decrement,\n  incrementByValue,\n} from \"../features/counter/counterSlice\";\n\nconst Home = () => {\n  const state = useSelector((state) => state);\n  const value = useSelector((state) => state.counter.value);\n  const dispatch = useDispatch();\n\n  return (\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <p>\n        Edit <code>src/App.js</code> and save to reload.\n      </p>\n      <a\n        className=\"App-link\"\n        href=\"https://reactjs.org\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Learn React\n      </a>\n      <div>\n        <button onClick={() => dispatch(incrementByValue(2))}>+</button>\n        {value}\n        <button onClick={() => dispatch(decrement())}>-</button>\n      </div>\n    </header>\n  );\n};\n\nexport default Home;\n","import { React } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport ComponentOne from \"../components/componentOne\";\nimport ComponentTwo from \"../components/componentTwo\";\nimport Home from \"../components/home\";\n\nconst RoutesComponent = () => {\n  return (\n    <Routes>\n      <Route element={<Home />} path=\"/\"></Route>\n      <Route element={<ComponentOne />} path=\"/componentOne\"></Route>\n      <Route element={<ComponentTwo />} path=\"/componentTwo\"></Route>\n    </Routes>\n  );\n};\n\nexport default RoutesComponent;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  increment,\n  decrement,\n  incrementByValue,\n} from \"./features/counter/counterSlice\";\nimport RoutesComponent from \"./routes/routes\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <RoutesComponent />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"../features/counter/counterSlice\";\n\nexport default configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}